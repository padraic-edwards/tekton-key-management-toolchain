---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "Create private/public key pairs for Image Signing"
template.description: "With this template you can create public/private key pairs to be consumed by an [Image Signing template](https://github.com/open-toolchain/image-signed-secure-kube-toolchain). The key pairs are stored in a [Key Protect](https://.cloud.ibm.com/catalog/services/key-protect) service instance, either using an existing instance or one created by the template."
deploy.title: "Create public/private key pairs for image signing "
deploy.description: "hello-world simple toolchain"
deploy.longDescription: "This template allows you to manage public/private keys for consumption by an image signing template"
deploy.appName: "App name"
deploy.apikeyDescription: "The IBM Cloud API key is used to access the IBM Cloud Kubernetes Service API and interact with the cluster. You can obtain your API key with 'bx iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by clicking **Create API key** (Each API key only can be viewed once)."
deploy.registryRegionDescription: "The IBM Cloud region for image registry"
deploy.registrynsDescription: "The namespace in the container image registry. You can set it up with {bx cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started."
deploy.regionDescription: "The IBM Cloud region for production deployment"
deploy.rgDescription: "The IBM Cloud resource group for production deployment"
deploy.apikey: "IBM Cloud API key"
deploy.containerregRegion: "Container registry region"
deploy.containerregns: "Container registry namespace"
deploy.imgregRegion: "Container image registry region"
deploy.imgregNs: "Container image registry namespace"
deploy.keyDetails: "Specify a Key Protect instance name.  If an instance has already been created, the existing one will be used, otherwise a new one will be created. You can specify signer names in the build and validation fields below or use the default values."
deploy.vaultName: "Key Protect Vault Instance name"
deploy.buildSigner: "DevOps Docker Image Build signer"
deploy.validationSigner: "DevOps Docker Image Validation signer"
deploy.rg: "Resource Group"
region: "Region"
organization: "Organization"
space: "Space"
prodStage: "Production environment"
headerSVG.think: "THINK"
headerSVG.code: "CODE"
headerSVG.deliver: "DELIVER"
headerSVG.run: "RUN"
headerSVG.issueTracker: "ISSUE TRACKER"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "REPOSITORY"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "WEB IDE"
headerSVG.kubernetes: "Kubernetes"
headerSVG.cluster: "Cluster"
